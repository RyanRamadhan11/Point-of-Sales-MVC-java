/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nani.awalia.view;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import nani.awalia.controller.controllerBarang;
import nani.awalia.db.KoneksiDatabase;

/**
 *
 * @author Nani Awalia
 */
public class viewBarangInternal extends javax.swing.JInternalFrame {
    private controllerBarang cB;
    /**
     * Creates new form viewBarangInternal
     */
    private DefaultTableModel model;
    public viewBarangInternal() {
        initComponents();
        
        cB = new controllerBarang(this);
        model = new DefaultTableModel();
        tabelBarang.setModel(model);
        model.addColumn("ID");
        //model.addColumn("JENIS");
        //model.addColumn("NAMA");
        //model.addColumn("JUMLAH");
        model.addColumn("NAMA");
        model.addColumn("HARGA");
        model.addColumn("QTY");
      
        tampilDataBarang();
        cB.kontrolButton();
    }
    
     public JTextField getIdBarangView(){
        return idBarang;
    }
    
    public JTextField getNamaBarangView(){
        return namaBarangView;
    }
    
    public JTextField getHargaBarangView(){
        return hargaBarangView;
    }
    
    public JTextField getJumlahView(){
        return jumlahView;
    }
    
    public JButton getTombolSimpan(){
        return tombolSimpan;
    }
    
    public JButton getTombolHapus(){
        return tombolHapus;
    }
    
    public JButton getTombolEdit(){
        return tombolUbah;
    }
    
    public JButton getTombolBatal(){
        return tombolBatal;
    }
    
    private void tampilDataBarang(){
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        String sql = "SELECT * FROM barang";
        
        try {
            Statement stat = (Statement) KoneksiDatabase.getKoneksi().createStatement();
            ResultSet res = stat.executeQuery(sql);
            
            while(res.next()){
                //mengambil hasil query variable sql
                Object[] hasil;
                hasil = new Object[6]; //ada 6 field ditabel pelanggan
                hasil[0] = res.getString("idBarang");
                hasil[1] = res.getString("namaBarang");
                hasil[2] = res.getString("hargaBarang");
                hasil[3] = res.getString("jumlahBarang");
                
                model.addRow(hasil);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(viewPelangganInternal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void ambilDataTabel(){
        int index = tabelBarang.getSelectedRow();
        
        String id = String.valueOf(tabelBarang.getValueAt(index, 0));
        String nama = String.valueOf(tabelBarang.getValueAt(index, 1));
        String harga = String.valueOf(tabelBarang.getValueAt(index, 2));
        String jml = String.valueOf(tabelBarang.getValueAt(index, 3));
        
        //mengisi nilai kedalam textfield
        idBarang.setText(id);
        namaBarangView.setText(nama);
        hargaBarangView.setText(harga);
        jumlahView.setText(jml);
       
        cB.kontrolButtonDua();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelBarang = new javax.swing.JTable();
        tombolUbah = new javax.swing.JButton();
        tombolSimpan = new javax.swing.JButton();
        tombolHapus = new javax.swing.JButton();
        tombolBatal = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jumlahView = new javax.swing.JTextField();
        idBarang = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        hargaBarangView = new javax.swing.JTextField();
        namaBarangView = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        tabelBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelBarang);

        tombolUbah.setText("UBAH");
        tombolUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolUbahActionPerformed(evt);
            }
        });

        tombolSimpan.setText("SIMPAN");
        tombolSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolSimpanActionPerformed(evt);
            }
        });

        tombolHapus.setText("HAPUS");
        tombolHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolHapusActionPerformed(evt);
            }
        });

        tombolBatal.setText("BATAL");
        tombolBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolBatalActionPerformed(evt);
            }
        });

        jLabel2.setText("ID Barang");

        jumlahView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahViewActionPerformed(evt);
            }
        });

        idBarang.setEnabled(false);
        idBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idBarangActionPerformed(evt);
            }
        });

        jLabel5.setText("Jumlah");

        jLabel4.setText("Harga Barang");

        jLabel3.setText("Nama Barang");

        hargaBarangView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaBarangViewActionPerformed(evt);
            }
        });

        namaBarangView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaBarangViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tombolBatal)
                        .addGap(18, 18, 18)
                        .addComponent(tombolHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tombolUbah)
                        .addGap(18, 18, 18)
                        .addComponent(tombolSimpan))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jumlahView, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(hargaBarangView, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(namaBarangView, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(idBarang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(idBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(namaBarangView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(hargaBarangView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jumlahView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tombolSimpan)
                            .addComponent(tombolUbah)
                            .addComponent(tombolHapus)
                            .addComponent(tombolBatal))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void tabelBarangMouseClicked(java.awt.event.MouseEvent evt) {                                         
        // TODO add your handling code here:
        ambilDataTabel();
    }                                        

    private void tombolUbahActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        cB.updateData();
        tampilDataBarang(); //merefresh*/
    }                                          

    private void tombolSimpanActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        cB.simpan();
        tampilDataBarang();
    }                                            

    private void tombolHapusActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        cB.deleteData();
        tampilDataBarang();
    }                                           

    private void tombolBatalActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        cB.kontrolButton();
        cB.bersihkan();
    }                                           

    private void jumlahViewActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void idBarangActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void hargaBarangViewActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void namaBarangViewActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              


    // Variables declaration - do not modify                     
    private javax.swing.JTextField hargaBarangView;
    private javax.swing.JTextField idBarang;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jumlahView;
    private javax.swing.JTextField namaBarangView;
    private javax.swing.JTable tabelBarang;
    private javax.swing.JButton tombolBatal;
    private javax.swing.JButton tombolHapus;
    private javax.swing.JButton tombolSimpan;
    private javax.swing.JButton tombolUbah;
    // End of variables declaration                   
}


========================================================================================

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nani.awalia.model;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import nani.awalia.db.KoneksiDatabase;

/**
 *
 * @author Nani Awalia
 */
public class modelBarang {
    private String namaBarangModel;
    private String hargaBarangModel;
    private int jumlah;
    private String idBarangModel;
    
    KoneksiDatabase koneksi = new KoneksiDatabase();

    public String getNamaBarangModel() {
        return namaBarangModel;
    }

    public void setNamaBarangModel(String namaBarangModel) {
        this.namaBarangModel = namaBarangModel;
    }

    public String getHargaBarangModel() {
        return hargaBarangModel;
    }

    public void setHargaBarangModel(String hargaBarangModel) {
        this.hargaBarangModel = hargaBarangModel;
    }

    public int getJumlah() {
        return jumlah;
    }

    public void setJumlah(int jumlah) {
        this.jumlah = jumlah;
    }

    public String getIdBarangModel() {
        return idBarangModel;
    }

    public void setIdBarangModel(String idBarangModel) {
        this.idBarangModel = idBarangModel;
    }
    
    public void simpanDataBarang(){
        //inisialisasi query untuk insert ke dalam database
        String sql = ("INSERT INTO barang (namaBarang,hargaBarang,jumlahBarang)" 
                + "VALUES ('"+getNamaBarangModel()+"','"+getHargaBarangModel()+"'"
                +",'"+getJumlah()+"')");
    
        
        //inisialisasi preparedstatement
        try {
            PreparedStatement eksekusi = koneksi.getKoneksi().prepareStatement(sql);
            eksekusi.execute();
            
            //pemberitahuan jika data berhasil disimpan
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
        } catch (SQLException ex) {
            //Logger.getLogger(modelPelanggan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Data Gagal Disimpan \n" +ex);
        }
    }
    
     public void hapusDataBarang(){
        String sql = "DELETE FROM barang WHERE idBarang = "
                + "'"+getIdBarangModel()+"'";
        
        try {
            PreparedStatement eksekusi = koneksi.getKoneksi().prepareStatement(sql);
            eksekusi.execute();
            
            //pemberitahuan jika data berhasil disimpan
            JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
        } catch (SQLException ex) {
            //Logger.getLogger(modelPelanggan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Data Gagal Dihapus \n" +ex);
        }
    }
    public void updateDataBarang(){
        //inisialisasi query untuk insert ke dalam database
        String sql = "UPDATE barang SET namaBarang = '"+getNamaBarangModel()+"'"
                +" ,hargaBarang = '"+getHargaBarangModel()+"'"
                +" ,jumlahBarang = '"+getJumlah()+"' WHERE idBarang = '"+getIdBarangModel()+"'";
               
    
        //inisialisasi preparedstatement
        try {
            PreparedStatement eksekusi = koneksi.getKoneksi().prepareStatement(sql);
            eksekusi.execute();
            
            //pemberitahuan jika data berhasil disimpan
            JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");
        } catch (SQLException ex) {
            //Logger.getLogger(modelPelanggan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Data Gagal Diupdate \n" +ex);
        }
    }
}


========================================================================================

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nani.awalia.view;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import nani.awalia.db.KoneksiDatabase;

/**
 *
 * @author Nani Awalia
 */
public class viewListDataBarang extends javax.swing.JFrame {

    /**
     * Creates new form viewListDataBarang
     */
    private viewTransaksi vT;
    private DefaultTableModel model;
    private String sql = "";
    public viewListDataBarang(viewTransaksi vT) {
        initComponents();
        
        this.vT = vT;
        model = new DefaultTableModel();
        tabelDataBarang.setModel(model);
        model.addColumn("ID");
        model.addColumn("NAMA");
        model.addColumn("HARGA");
        model.addColumn("JUMLAH");
        //model.addColumn("id Barang");
        //model.addColumn("nama Barang");
        //model.addColumn("satuan Barang");
        //model.addColumn("jenis Barang");
        //model.addColumn("ukuran");
        //model.addColumn("harga");
        
       tampilDataBarang("");
    }
    
    private void tampilDataBarang(String data){
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        if(data.equals("")){
            sql = "select * from barang";
        }else sql = "select * from barang where namaBarang LIKE '"+data+"%'";
        
        try {
            Statement stat = (Statement)KoneksiDatabase.getKoneksi().createStatement();
            ResultSet res = stat.executeQuery(sql);
            
            while(res.next()){
                Object [] hasil;
                hasil = new Object[6];
                
                hasil[0] = res.getString("idBarang");
                hasil[1] = res.getString("namaBarang");
                hasil[2] = res.getString("hargaBarang");
                hasil[3] = res.getString("jumlahBarang");
                
                //hasil[0] = res.getString("idBarang");
                //hasil[1] = res.getString("namaBarang");
                //hasil[2] = res.getString("jenisBarang");
                //hasil[3] = res.getString("satuan");
                //hasil[4] = res.getString("ukuran");
                //hasil[5] = res.getString("harga");
                
                model.addRow(hasil);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(viewListDataBarang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        namaBarang = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelDataBarang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Daftar Barang");

        jLabel2.setText("Cari Nama Barang");

        namaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaBarangActionPerformed(evt);
            }
        });
        namaBarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                namaBarangKeyPressed(evt);
            }
        });

        tabelDataBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelDataBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelDataBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelDataBarang);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(271, 271, 271)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void namaBarangActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void namaBarangKeyPressed(java.awt.event.KeyEvent evt) {                                      
        // TODO add your handling code here:
        tampilDataBarang(namaBarang.getText());
    }                                     

    private void tabelDataBarangMouseClicked(java.awt.event.MouseEvent evt) {                                             
        // TODO add your handling code here:
        int ambilRow = tabelDataBarang.getSelectedRow();
        vT.getNamaBarang().setText(tabelDataBarang.getValueAt(ambilRow,1).toString());
        vT.getHargaBarang().setText(tabelDataBarang.getValueAt(ambilRow,2).toString());
        
        //vT.getHargaBarang().requestFocus();
        this.dispose();
        
        
        
    }                                            

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namaBarang;
    private javax.swing.JTable tabelDataBarang;
    // End of variables declaration                   
}


========================================================================================

